package com.product.categoria.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import com.product.categoria.entities.Categories;
import com.product.categoria.entities.Product;
import com.product.categoria.repositories.CategoryRepository;
import com.product.categoria.repositories.ProductRepository;
import java.util.Optional;

@Service
public class ProductoService {
	
	@Autowired
	private ProductRepository productoRepository;
	
	@Autowired
	private CategoryRepository categoryRepository;
	
	public Product create(Integer categoryId, Product product) {
		Optional<Categories> result = categoryRepository.findById(categoryId);
		if (result.isPresent()) {
			product.setCategories(result.get());
			return productoRepository.save(product);
		}else {
			throw new ResponseStatusException(HttpStatus.NOT_FOUND, String.format("Category id %d doesn't exists", categoryId));
		}			
		
	}
	
	public Product updateProduct(Integer categoryId,Integer productId, Product product) {
		Optional<Product> result = productoRepository.findByCategoriesIdAndProductId(categoryId, productId)
	    .orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, 
	    		String.format("category not found product %d and profile %d", categoryId,productId );
		
		profileRepository.findByUserIdAndProfileId(userId, profileId)
		.orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND,
				String.format("Profile not found user %d and profile %d", userId,profileId )));
		if(result.isPresent()) {
			return productoRepository.save(product);
		}else {
			throw new ResponseStatusException(HttpStatus.NOT_FOUND, String.format("Product %d doesn't exists", categoryId, productId));
		}
	}
}
